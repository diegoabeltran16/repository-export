{
  "title": "-models_record.go",
  "text": "## [[Tags]]\n[[--- üß¨ Por Clasificar]]\n\n```go\n// models/record.go ‚Äì Versiones v1 y v2 de Record\n// --------------------------------------------------------------------------------\n// Contexto pedag√≥gico\n// -------------------\n// Este archivo concentra **ambas** representaciones que usa el pipeline:\n//   ‚Ä¢ `Record`  (v1) ‚Üí estructura compacta, utilizada hasta ahora.\n//   ‚Ä¢ `RecordV2` (v2) ‚Üí esquema \"AI‚Äëfriendly\" con meta ‚Üî content separados.\n//\n// Mantener los dos modelos en un solo archivo permite evolucionar gradualmente\n// sin romper compatibilidad.  El conversor v1 sigue funcionando tal cual; el\n// conversor v2 emitir√° la nueva forma s√≥lo cuando el usuario pase `-mode v2`.\n// --------------------------------------------------------------------------------\n\npackage models\n\nimport \"time\"\n\n// -----------------------------------------------------------------------------\n// VERSI√ìN 1 ‚Äì Compacta (heredada)\n// -----------------------------------------------------------------------------\n// Usada por ConvertTiddlers (v1).  Se conserva para no romper flujos existentes.\n\ntype Record struct {\n\tID           string   `json:\"id\"` // normalmente igual a Title\n\tTags         []string `json:\"tags,omitempty\"`\n\tContentType  string   `json:\"type,omitempty\"`\n\tTextMarkdown string   `json:\"textMarkdown,omitempty\"`\n\tTextPlain    string   `json:\"textPlain,omitempty\"`\n\tCreatedAt    string   `json:\"createdAt,omitempty\"` // formato yyyymmdd‚Ä¶ (legacy)\n\tModifiedAt   string   `json:\"modifiedAt,omitempty\"`\n\tColor        string   `json:\"color,omitempty\"`\n}\n\n// -----------------------------------------------------------------------------\n// VERSI√ìN 2 ‚Äì ‚ÄúAI‚Äëfriendly‚Äù (meta vs content)\n// -----------------------------------------------------------------------------\n// Nuevas estructuras\n\ntype Content struct {\n\tPlain    string         `json:\"plain,omitempty\"`\n\tMarkdown string         `json:\"markdown,omitempty\"`\n\tJSON     map[string]any `json:\"json,omitempty\"`\n\tSections []Section      `json:\"sections,omitempty\"`\n}\n\ntype Section struct {\n\tLevel   int    `json:\"level\"`\n\tHeading string `json:\"heading\"`\n\tText    string `json:\"text\"`\n}\n\ntype Meta struct {\n\tTitle    string            `json:\"title\"`\n\tTags     []string          `json:\"tags,omitempty\"`\n\tCreated  time.Time         `json:\"created,omitempty\"`\n\tModified time.Time         `json:\"modified,omitempty\"`\n\tColor    string            `json:\"color,omitempty\"`\n\tExtra    map[string]string `json:\"extra,omitempty\"`\n}\n\ntype RecordV2 struct {\n\tID        string              `json:\"id\"`\n\tType      string              `json:\"type\"` // \"tiddler\", \"fragment\", etc.\n\tMeta      Meta                `json:\"meta\"`\n\tContent   Content             `json:\"content\"`\n\tRelations map[string][]string `json:\"relations,omitempty\"`\n}\n\n```",
  "tags": "[[--- üß¨ Por Clasificar]]",
  "type": "text/markdown",
  "created": "20250531224148704",
  "modified": "20250531224148704"
}
{
  "title": "-rep-export-Windows_tag_mapper.py",
  "text": "## [[Tags]]\n[[--- 🧬 Por Clasificar]]\n\n```python\n\"\"\"\n📦 Módulo: tag_mapper.py\n🎯 Ubicación: scripts/tag_mapper.py\n\n🧠 Función:\nEste módulo se encarga de asignar tags semánticos a archivos del proyecto,\nbasándose en una fuente centralizada: `OpenPages.json`.\n\nEste JSON contiene entradas del tipo:\n{\n    \"title\": \"-src_logger.py\",\n    \"tags\": \"[[--- Codigo]] [[Python]] [[--📘 Documentacion]]\"\n}\n\n🚀 Este módulo expone una función principal:\n    get_tags_for_file(file_path: Path) -> List[str]\n\nY se puede usar desde:\n    - tiddler_exporter.py\n    - exploradores semánticos\n    - validadores de tags\n\n⚠️ Si el archivo no está en OpenPages.json, retorna:\n    ['[[--- 🧬 Por Clasificar]]']\n\"\"\"\n\nimport json\nfrom pathlib import Path\nimport os\n\n\n# ========================================\n# ⚙️ CONFIGURACIÓN DEL JSON SEMÁNTICO\n# ========================================\nTIDDLERS_IMPORT_PATH = Path(__file__).resolve().parents[1] / \"scripts/tiddlers-import/OpenPages.json\"\n\n# ========================================\n# 📥 CARGA DEL JSON UNA SOLA VEZ\n# ========================================\ntry:\n    with open(TIDDLERS_IMPORT_PATH, 'r', encoding='utf-8') as f:\n        tag_data = json.load(f)\nexcept FileNotFoundError:\n    print(f\"⚠️ No se encontró el archivo OpenPages.json en: {TIDDLERS_IMPORT_PATH}\")\n    tag_data = []\n\n# Creamos un índice: título → lista de tags\ntitle_to_tags = {}\nfor item in tag_data:\n    title = item.get(\"title\", \"\").strip()\n    tags = item.get(\"tags\", \"\")\n    title_to_tags[title] = tags.split()\n\n# ========================================\n# 🔎 FUNCIÓN PRINCIPAL DE CONSULTA\n# ========================================\ndef get_tags_for_file(file_path: Path) -> list[str]:\n    \"\"\"\n    Dado un archivo del proyecto, retorna la lista de tags correspondientes\n    según el título TiddlyWiki generado (ej. \"-src_logger.py\").\n    Si no se encuentra, retorna [[--- 🧬 Por Clasificar]]\n    \"\"\"\n    rel_title = \"-\" + str(file_path.relative_to(Path(__file__).resolve().parents[1])).replace(os.sep, '_')\n    return title_to_tags.get(rel_title, ['[[--- 🧬 Por Clasificar]]'])\n```",
  "tags": "[[--- 🧬 Por Clasificar]]",
  "type": "text/markdown",
  "created": "20250603172144476",
  "modified": "20250603172144476"
}
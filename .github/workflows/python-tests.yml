name: python-tests

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  release:
    types:
      - published
  workflow_dispatch: {}    # <-- notar aquÃ­ el {} para evitar el warning en algunos linters

jobs:
  test:
    name: Test on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest

      - name: Run Windows tests
        if: matrix.os == 'windows-latest'
        working-directory: rep-export-Windows
        run: |
          pytest ../test-rep-export-Windows --maxfail=1 --disable-warnings -q

      - name: Run all tests
        if: matrix.os != 'windows-latest'
        run: |
          pytest --maxfail=1 --disable-warnings -q

  build-package:
    name: Build & Publish to TestPyPI
    runs-on: ubuntu-latest
    needs: test
    if: >
      github.event_name == 'push' &&
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build distribution
        run: python -m build

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          pip install twine
          twine upload --repository testpypi dist/*

  release:
    name: Publish Release to PyPI
    runs-on: ubuntu-latest
    needs: build-package
    if: >
      github.event_name == 'release' &&
      github.event.action == 'published'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install twine
          twine upload dist/*

      - name: Attach Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
